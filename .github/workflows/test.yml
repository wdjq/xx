name: Build Flutter Android APK

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      # 检出代码到运行环境

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.4'  # 使用最新稳定版本的 Flutter

    - name: Modify Flutter configuration
      run: |
        # 获取 Flutter SDK 的路径
        FLUTTER_DIR=$(dirname $(which flutter))
        # 构建 flutter.groovy 文件的完整路径
        FLUTTER_GROOVY_PATH="${FLUTTER_DIR}/packages/flutter_tools/gradle/src/main/groovy/flutter.groovy"
        # 检查文件是否存在
        if [ -f "$FLUTTER_GROOVY_PATH" ]; then
          # 使用 sed 删除与 ShrinkResources 相关的 if 代码块
          sed -i '/if.*ShrinkResources.*/,/end/{//d}' "$FLUTTER_GROOVY_PATH"
        else
          echo "flutter.groovy file not found at path: $FLUTTER_GROOVY_PATH"
          exit 1
        fi

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 bison patch gcc
      # 安装构建过程中需要的依赖

    - name: Prepare build environment
      run: |
        # 使用 wget 从 GitHub Releases 下载 debian-xfce.tar.xz 文件
        wget https://github.com/Cateners/tiny_computer/releases/download/v1.0.18/debian-xfce.tar.xz
        # 确保 assets 目录存在
        mkdir -p assets
        # 使用 split 命令将下载的 tar.xz 文件分割成多个小于 98MB 的文件
        # 直接将分割后的文件保存在 assets 目录中
        split -b 98M debian-xfce.tar.xz assets/debian.tar.xz.

    - name: Build project
      run: |
        flutter build apk --target-platform android-arm64 --split-per-abi --obfuscate --split-debug-info=tiny_computer/sdi
      # 使用 Flutter 构建 APK

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-apk
        path: build/app/outputs/flutter-apk/app-arm64.apk
      # 上传构建好的 APK 为工件
